name: Build and push docker image to ECR

on:
  workflow_call:
    inputs:
      nexus_host_url:
        type: string
      environment:
        required: true
        type: string
      group_id:
        type: string
      artifact_id:
        required: true
        type: string
      artifact_url:
        type: string
      service_name:
        required: true
        type: string
      version:
        required: true
        type: string
      test_tag_suffix:
        required: false
        type: string
      aws_account_id:
        required: true
        type: string
      aws_account_id_ecr:
        required: true
        type: string
        default: "794071690772"
      local_runner:
        required: false
        type: string
        default: "self-hosted-runner-standard"

    secrets:
      nexus_username:
        required: true
      nexus_password:
        required: true

jobs:
  build-docker-image:
    name: Build & Push Docker Image
    runs-on: ${{ inputs.local_runner }}

    permissions:
      id-token: write
      contents: read

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Setup Java
        if: inputs.group_id != ''
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'

      # Here the cached Dockerfile is recalled from the cache created when the maven-release.yml re-usable
      # workflow was previously called by the develop-v2.yml workflow upon a PR being merge into develop.
      # 
      # When not testing a docker build with create-test-image-v2.yml, this cache is not-recalled  (test_tag_suffix == '')
      # and the dockerfile being tested is used.
      - name: Cache Dockerfile
        if: inputs.test_tag_suffix == ''
        id: cache-dockerfile
        uses: actions/cache@v3
        with:
          path: Dockerfile
          key: ${{ inputs.artifact_id }}-${{ inputs.version }}-dockerfile

      - name: Maven Settings XML File
        if: inputs.group_id != ''
        uses: whelk-io/maven-settings-xml-action@v21
        with:
          repositories: '[{ "id": "litteranexus", "url": "${{ inputs.nexus_host_url }}", "releases": { "enabled": true }, "snapshots": { "enabled": true } }]'
          plugin_repositories: '[{ "id": "litteranexus", "url": "${{ inputs.nexus_host_url }}", "releases": { "enabled": true }, "snapshots": { "enabled": true } }]'
          servers: '[{ "id": "litteranexus", "username": "${{ secrets.nexus_username }}", "password": "${{ secrets.nexus_password }}" }]'
          active_profiles: '[ "github" ]'
          output_file: /home/runner/.m2/settings.xml

      - name: Mvn Download Artifact
        if: inputs.group_id != ''
        run: |
          ./mvnw dependency:copy -Dartifact=${{ inputs.GROUP_ID }}:${{ inputs.ARTIFACT_ID }}:${{ inputs.version }}:jar -DoutputDirectory=./target -U

      - name: Curl Download Artifact
        if: inputs.artifact_url != ''
        run: |
          curl -v -k -u "${{secrets.nexus_username}}:${{secrets.nexus_password}}" ${{ inputs.artifact_url }} -o dist.zip

      - uses: montudor/action-zip@v1
        if: inputs.artifact_url != ''
        with:
          args: unzip -qq dist.zip -d dist

      - name: Get runner arch
        id: runner_arch
        run: |
          arch_value=$(uname -m)
          if [ "$arch_value" = "x86_64" ]; then
            echo "runner_arch=amd64" >> $GITHUB_OUTPUT
          elif [ "$arch_value" = "aarch64" ]; then
            echo "runner_arch=arm64" >> $GITHUB_OUTPUT
          fi

      - name: Setup aws cli
        uses: unfor19/install-aws-cli-action@v1
        with:
          version: 2
          arch: ${{ steps.runner_arch.outputs.runner_arch }}
      
      - name: Configure AWS Creds
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-region: us-east-1
          role-to-assume: arn:aws:iam::${{ inputs.aws_account_id }}:role/github-assume-role

      - name: Build, tag, and push docker image to Amazon ECR
        run: |

          set -e
          
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${{ inputs.aws_account_id }}.dkr.ecr.us-east-1.amazonaws.com

          if [[ "${{ inputs.service_name }}" == "littera-core-api" ]]; then
            docker build -t littera-core:latest .
            if [ -z "${{ inputs.test_tag_suffix }}" ]; then
              docker tag littera-core:latest ${{ inputs.aws_account_id_ecr }}.dkr.ecr.us-east-1.amazonaws.com/littera-core:${{ inputs.version }}
              docker tag littera-core:latest ${{ inputs.aws_account_id_ecr }}.dkr.ecr.us-east-1.amazonaws.com/littera-core:${{ inputs.environment }}
              docker push ${{ inputs.aws_account_id_ecr }}.dkr.ecr.us-east-1.amazonaws.com/littera-core:${{ inputs.version }}
              docker push ${{ inputs.aws_account_id_ecr }}.dkr.ecr.us-east-1.amazonaws.com/littera-core:${{ inputs.environment }}
            else
              docker tag littera-core:latest ${{ inputs.aws_account_id_ecr }}.dkr.ecr.us-east-1.amazonaws.com/littera-core:${{ inputs.version }}-${{ inputs.test_tag_suffix }}
              docker push ${{ inputs.aws_account_id_ecr }}.dkr.ecr.us-east-1.amazonaws.com/littera-core:${{ inputs.version }}-${{ inputs.test_tag_suffix }}
            fi
          else
            docker build -t ${{ inputs.service_name }} .
            if [ -z "${{ inputs.test_tag_suffix }}" ]; then
              docker tag ${{ inputs.service_name }}:latest ${{ inputs.aws_account_id_ecr }}.dkr.ecr.us-east-1.amazonaws.com/${{ inputs.service_name }}:${{ inputs.version }}
              docker tag ${{ inputs.service_name }}:latest ${{ inputs.aws_account_id_ecr }}.dkr.ecr.us-east-1.amazonaws.com/${{ inputs.service_name }}:${{ inputs.environment }}
              docker push ${{ inputs.aws_account_id_ecr }}.dkr.ecr.us-east-1.amazonaws.com/${{ inputs.service_name }}:${{ inputs.version }}
              docker push ${{ inputs.aws_account_id_ecr }}.dkr.ecr.us-east-1.amazonaws.com/${{ inputs.service_name }}:${{ inputs.environment }}
            else
              docker tag ${{ inputs.service_name }}:latest ${{ inputs.aws_account_id_ecr }}.dkr.ecr.us-east-1.amazonaws.com/${{ inputs.service_name }}:${{ inputs.version }}-${{ inputs.test_tag_suffix }}
              docker push ${{ inputs.aws_account_id_ecr }}.dkr.ecr.us-east-1.amazonaws.com/${{ inputs.service_name }}:${{ inputs.version }}-${{ inputs.test_tag_suffix }}
            fi
          fi
