name: Export Vercel Vars

on:
  workflow_call:
    inputs:
      service_repo:
        description: Service Repo
        type: string
      vercel_config_branch:
        description: Vercel Config Branch
        type: string
        default: "develop"


    outputs:
      local_runner:
        description: local runner
        value: ${{ jobs.export-vars.outputs.local_runner }}
      testing_workflow:
        description: workflow used for tests
        value: ${{ jobs.export-vars.outputs.testing_workflow }}
      package_manager:
        description: package manager is yarn or npm
        value: ${{ jobs.export-vars.outputs.package_manager }}
      node_version:
        description: node version
        value: ${{ jobs.export-vars.outputs.node_version }}
      turborepo_apps:
        description: turborepo apps
        value: ${{ jobs.export-vars.outputs.turborepo_apps }}

    secrets:
      repo_token:
        required: true

jobs:
  export-vars:
    name: Export Vars
    runs-on: self-hosted-runner-standard

    permissions:
      id-token: write
      contents: read

    outputs:
      local_runner: ${{ steps.step_export_vars.outputs.local_runner }}
      testing_workflow: ${{ steps.step_export_vars.outputs.testing_workflow }}
      package_manager: ${{ steps.step_export_vars.outputs.package_manager }}
      node_version: ${{ steps.step_export_vars.outputs.node_version }}
      turborepo_apps: ${{ steps.step_export_vars.outputs.turborepo_apps }}

    steps:
      - uses: actions/checkout@v4
        with:
          repository: Littera-Education/littera-github-actions
          token: ${{ secrets.repo_token }}
          path: vercel-config
          ref: ${{ inputs.vercel_config_branch }}
          fetch-depth: 0
      
      - name: export vars
        id: step_export_vars
        run: |
          ls -R
          ### export service_name
          repo="${{ inputs.service_repo }}"
          service_name=(${repo//\// })
          service_name=${service_name[1]}
          echo "service_name=${service_name}"
          echo "service_name=${service_name}" >> $GITHUB_OUTPUT

          ### export local_runner
          local_runner=$(eval "jq -r '.\"${service_name}\".local_runner' vercel-config/env/VERCEL.json")
          echo "local_runner=$local_runner"
          echo "local_runner=$local_runner" >> $GITHUB_OUTPUT

          ### export testing_workflow
          testing_workflow=$(eval "jq -r '.\"${service_name}\".testing_workflow' vercel-config/env/VERCEL.json")
          echo "testing_workflow=$testing_workflow"
          echo "testing_workflow=$testing_workflow" >> $GITHUB_OUTPUT

          ### export package_manager
          package_manager=$(eval "jq -r '.\"${service_name}\".package_manager' vercel-config/env/VERCEL.json")
          echo "package_manager=$package_manager"
          echo "package_manager=$package_manager" >> $GITHUB_OUTPUT

          ### export node_version
          node_version=$(eval "jq -r '.\"${service_name}\".node_version' vercel-config/env/VERCEL.json")
          echo "node_version=$node_version"
          echo "node_version=$node_version" >> $GITHUB_OUTPUT

          ### export apps (turborepo support)
          turborepo_apps_array=$(eval "jq -r '.\"${service_name}\".turborepo_apps' vercel-config/env/VERCEL.json")
          turborepo_apps=$(printf "\"%s\"," "${turborepo_apps_array[@]}")
          turborepo_apps=${turborepo_apps::-1}

          echo "turborepo_apps="$turborepo_apps
          echo "turborepo_apps="$turborepo_apps >> $GITHUB_OUTPUT
          