name: Maven Build

on:
  workflow_call:
    inputs:
      nexus_host_url:
        required: true
        type: string
      sonar_host_url:
        required: true
        type: string
      is_release: # this is treated as a string since booleans have issues
        required: true
        type: string

    secrets:
      nexus_username:
        required: true
      nexus_password:
        required: true
      sonar_token:
        required: true

    outputs:
      version:
        description: "The version of the artifact being created"
        value: ${{ jobs.maven_build.outputs.version }}

jobs:
  maven_build:
    name: Maven Build
    runs-on: ubuntu-latest

    outputs:
      version: ${{ steps.get-project-info.outputs.VERSION }}

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'
          server-id: 'litteranexus'
          server-username: ${{ secrets.nexus_username }}
          server-password: ${{ secrets.nexus_password }}
          settings-path: '/home/runner/.m2'

      # - name: Get Project Info
      #   id: get-project-info
      #   run: |
      #     VERSION=$(./mvnw help:evaluate -Dexpression=project.version -q -DforceStdout)
      #     NAME=$(./mvnw help:evaluate -Dexpression=project.name -q -DforceStdout)

      #     if [[ ! $VERSION =~ "-SNAPSHOT" ]]; then
      #       echo "Current version is not a SNAPSHOT, please bump to the next SNAPSHOT to continue."
      #       exit 1
      #     fi

      #     if [ "${{ inputs.is_release }}" == "true" ]; then
      #             VERSION=$(echo $VERSION | cut -d- -f1)
      #     fi

      #     echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
      #     echo "NAME=$NAME" >> $GITHUB_OUTPUT

      - name: Maven Build and Sonar
        env:
          SONAR_TOKEN: ${{ secrets.sonar_token }}
          SONAR_HOST_URL: ${{ inputs.sonar_host_url }}
        run: |
          ./mvnw clean install sonar:sonar -Dsonar.qualitygate.wait=true
      
      - name: Cache github pages
        id: cache-github-pages
        uses: actions/cache@v3
        with:
          path: target/docs
          key: ${{ steps.get-project-info.outputs.NAME }}-${{ steps.get-project-info.outputs.VERSION }}-github-pages
