name: NPM Build And Release

on:
  workflow_call:
    inputs:
      nexus_host_domain:
        required: true
        type: string
      artifact_id:
        required: true
        type: string
      version:
        required: true
        type: string
      node_version:
        type: number
        default: 16

    secrets:
      nexus_username:
        required: true
      nexus_password:
        required: true
      nexus_npm_login:
        required: true
      github_actions_token:
        required: true

    outputs:
      version:
        description: "artifact version"
        value: ${{ jobs.npm_build.outputs.version }}
      artifact_url: 
        description: "artifact url"
        value: ${{ jobs.npm_build.outputs.artifact_url }}

jobs:
  npm_build:
    name: NPM Build and Release
    runs-on: ubuntu-latest

    outputs:
      version: ${{ steps.upload-artifact.outputs.VERSION }}
      artifact_url: ${{ steps.upload-artifact.outputs.ARTIFACT_URL }}

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Release Please
        id: release-please
        uses: google-github-actions/release-please-action@v3
        with:
          token: ${{ secrets.github_actions_token }}
          default-branch: ${{ github.ref_name }}
          release-type: node
          package-name: ${{ inputs.artifact_id }}

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ inputs.node_version }}

      - name: Setup .npmrc for pulling & publishing to Nexus
        run: |
          echo -e '\n' \
          'registry=https://${{ inputs.nexus_host_domain }}/repository/npm-public\n' \
          '_auth=${{ secrets.nexus_npm_login }}\n' \
          '//${{ inputs.nexus_host_domain }}/repository/npm-local:_auth=${{ secrets.nexus_npm_login }}\n' \
          'email=${{ secrets.nexus_username }}\n' \
          'always-auth=true\n' \
          >> .npmrc

      - name: Install dependencies (with cache)
        uses: bahmutov/npm-install@v1

      - name: Build
        run: npm run build

      - uses: montudor/action-zip@v1
        with:
          args: zip -qq -r dist.zip dist node_modules package.json

      - name: Get Release PR Title
        uses: actions/github-script@v6
        id: release-pr-title
        with:
          script: |
            const prs = await github.rest.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
            })

            const releasepr = prs.data.filter(pr => pr.title.includes("chore(main): release"))
            console.log(releasepr)

            if(releasepr.length > 0) {
              return releasepr.pop().title
            }

            console.log('No pending release prs found')
          result-encoding: string

      - name: upload zip file to nexus
        id: upload-artifact
        run: |
          if [ "${{ steps.release-please.outputs.release_created }}" ]; then
            version=inputs.version
            artifact_url=https://${{ inputs.nexus_host_domain }}/repository/node-artifacts/${{ inputs.artifact_id }}/${{ inputs.version }}/dist.zip
          elif [ "${{ steps.release-pr-title.outputs.result }}" != "undefined" ]; then
            version="${{ steps.release-pr-title.outputs.result }}"
            echo $version
            versionparts=($version)
            echo ${versionparts[-1]}
            version="${versionparts[-1]}-SNAPSHOT-$(date +%Y-%m-%d-%H-%M-%S)"
            artifact_url=https://${{ inputs.nexus_host_domain }}/repository/node-artifacts/${{ inputs.artifact_id }}/$version/dist.zip
          else
            echo "No version detected, erroring."
            exit 1
          fi

          curl -v -k -u "${{secrets.nexus_username}}:${{secrets.nexus_password}}" --upload-file dist.zip $artifact_url
          echo "VERSION=$version" >> $GITHUB_OUTPUT
          echo "ARTIFACT_URL=$artifact_url" >> $GITHUB_OUTPUT

      - name: Cache Dockerfile
        id: cache-dockerfile
        uses: actions/cache@v3
        with:
          path: Dockerfile
          key: ${{ inputs.artifact_id }}-${{ steps.upload-artifact.outputs.VERSION }}-dockerfile
