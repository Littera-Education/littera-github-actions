name: NPM (or Yarn) Tests

on:
  workflow_call:
    inputs:
      nexus_host_domain:
        required: true
        type: string
      sonar_host_url:
        required: true
        type: string
      sonar_coverage_exclusions:
        type: string
        default: "src/main.ts,src/**/*.module.ts,src/mocks/**/*.ts"
      sonar_sources:
        type: string
        default: "src"
      sonar_test_inclusions:
        type: string
        default: "src/**/*.spec.ts"
      sonar_cpd_exclusions:
        type: string
        default: ""
      node_version:
        type: number
        default: 16

    secrets:
      nexus_username:
        required: true
      nexus_npm_login:
        required: true
      sonar_token:
        required: true

    outputs:
      version:
        description: "artifact version"
        value: ${{ jobs.npm_tests.outputs.version }}
      artifact_id: 
        description: "artifact id"
        value: ${{ jobs.npm_tests.outputs.artifact_id }}

jobs:
  npm_tests:
    name: NPM (or Yarn) Tests
    runs-on: ubuntu-latest

    outputs:
      version: ${{ steps.get-project-info.outputs.VERSION }}
      artifact_id: ${{ steps.get-project-info.outputs.ARTIFACTID }}

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ inputs.node_version }}

      - name: Setup .npmrc for pulling & publishing to Nexus
        run: |
          echo -e '\n' \
          'registry=https://${{ inputs.nexus_host_domain }}/repository/npm-public\n' \
          '_auth=${{ secrets.nexus_npm_login }}\n' \
          '//${{ inputs.nexus_host_domain }}/repository/npm-local:_auth=${{ secrets.nexus_npm_login }}\n' \
          'email=${{ secrets.NEXUS_USERNAME }}\n' \
          'always-auth=true\n' \
          >> .npmrc
          
      - name: Get Project Info
        id: get-project-info
        run: |
          echo "ARTIFACTID=$(npm pkg get name | xargs echo)" >> $GITHUB_OUTPUT
          echo "VERSION=$(npm pkg get version | xargs echo)" >> $GITHUB_OUTPUT

      - name: Install dependencies (with cache)
        uses: bahmutov/npm-install@v1

      - name: Execute Unit Tests
        run: npm run test:cov

      - name: Check linting
        run: npm run lint

      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@v1
        env:
          SONAR_TOKEN: ${{ secrets.sonar_token }}
          SONAR_HOST_URL: ${{ inputs.sonar_host_url }}
        with:
          # https://docs.sonarqube.org/latest/analysis/analysis-parameters/
          args: >
            -Dsonar.projectKey=${{ steps.get-project-info.outputs.ARTIFACTID }}
            -Dsonar.projectVersion=${{ steps.get-project-info.outputs.VERSION }}
            -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info
            -Dsonar.coverage.exclusions=${{ inputs.sonar_coverage_exclusions }}
            -Dsonar.sources=${{ inputs.sonar_sources }}
            -Dsonar.test.inclusions=${{ inputs.sonar_test_inclusions }}
            -Dsonar.cpd.exclusions=${{ inputs.sonar_cpd_exclusions }}

      - name: SonarQube Quality Gate check
        # for some reason they don't have a v1 tag, so using full version
        uses: sonarsource/sonarqube-quality-gate-action@v1.1.0
        # Force to fail step after specific time
        timeout-minutes: 5
        env:
          SONAR_TOKEN: ${{ secrets.sonar_token }}
          SONAR_HOST_URL: ${{ inputs.sonar_host_url }}
