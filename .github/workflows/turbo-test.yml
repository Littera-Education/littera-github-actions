name: Turborepo - Test

on:
  workflow_call:
    inputs:
      nexus_host_domain:
        required: true
        type: string
      node_version:
        type: string
        default: "18"
      local_runner:
        required: false
        type: string
        default: "self-hosted-runner-standard"
      pending_apps:
        required: true
        type: string

    secrets:
      nexus_username:
        required: true
      nexus_npm_login:
        required: true
      sonar_token:
        required: true

jobs:
  turbo-test:
    name: Turbo Test
    runs-on: ${{ inputs.local_runner }}

    strategy:
      matrix:
        app: ${{ fromJSON(inputs.pending_apps) }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node_version }}

      - name: Setup .npmrc for pulling & publishing to Nexus
        run: |
          FULL_REPO_AUTH="//${{ inputs.nexus_host_domain }}/repository/:_auth=${{ secrets.nexus_npm_login }}"
          echo -e "\n" \
            "registry=https://${{ inputs.nexus_host_domain }}/repository/npm-public\n" \
            "$FULL_REPO_AUTH\n" \
            "//${{ inputs.nexus_host_domain }}/repository/npm-local:_auth=${{ secrets.nexus_npm_login }}\n" \
            "email=${{ secrets.nexus_username }}\n" \
            "always-auth=true\n" \ >> .npmrc

      - name: Install dependencies (with cache)
        uses: bahmutov/npm-install@v1

      - name: Execute Unit Tests
        run: npm run test -- --filter=${{ matrix.app }}

      - name: Get Project Info
        id: get-project-info
        run: |
          echo "VERSION=$(npm pkg get version --workspaces | jq '."${{ matrix.app }}"' | xargs echo)" >> $GITHUB_OUTPUT
          echo "WORKSPACE_PATH=$(realpath --relative-to=. $(npm exec -c pwd -w ${{ matrix.app }}) | xargs echo)" >> $GITHUB_OUTPUT

      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@v2
        with:
          projectBaseDir: ${{ steps.get-project-info.outputs.WORKSPACE_PATH }}
          args: >
            -Dsonar.projectVersion=${{ steps.get-project-info.outputs.VERSION }}
        env:
          SONAR_TOKEN: ${{ secrets.sonar_token }}
          SONAR_HOST_URL: 'https://sonarcloud.io'