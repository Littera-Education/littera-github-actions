name: Deploy To Vercel

on:
  workflow_call:
    inputs:
      git_tag:
        required: true
        type: string
      nexus_host_domain:
        required: true
        type: string
      environment:
        required: true
        type: string
      node_version:
        type: string
        default: "18"
      package_manager:
        type: string
        default: npm
      local_runner:
        required: false
        type: string
        default: "self-hosted-runner-standard"
      max_old_space_size:
        required: false
        type: string
        default: "4096"
      vercel_cli_version:
        required: false
        type: string
        default: "33.4.0"

    secrets:
      nexus_username:
        required: true
      nexus_npm_login:
        required: true
      vercel_token:
        required: true
      vercel_org_id:
        required: true
      vercel_project_id:
        required: true
      github_actions_token:
        required: true

jobs:
  apply-env-vars:
    name: Apply Env Vars to ${{ inputs.environment }}-${{ github.event.repository.name }}
    runs-on: ${{ inputs.local_runner }}

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout Vercel Terraform
        uses: actions/checkout@v4
        with:
          repository: Littera-Education/terraform-root-vercel
          token: ${{ secrets.github_actions_token }}
          ref: "develop"
          path: vercel-env-vars
          fetch-depth: 0
          submodules: true

      - name: Configure AWS Creds
        uses: aws-actions/configure-aws-credentials@v4.0.2
        with:
          aws-region: us-east-1
          role-to-assume: arn:aws:iam::595237692563:role/github-action-${{ github.event.repository.name }}

      - name: Set up Node
        # Needed to install terraform
        uses: actions/setup-node@v4
        with:
          node-version: '20'  

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        id: init
        run: |
          cd vercel-env-vars
          ./terraform-scripts/terraform.sh -a init -c ${{ inputs.environment }} -t "-no-color -backend-config=""key=${{ github.event.repository.name }}.tfstate"""

      - name: Terraform Apply
        env:
          VERCEL_API_TOKEN: ${{ secrets.vercel_token }}
        run: |
          cd vercel-env-vars
          ./terraform-scripts/terraform.sh -a apply -c ${{ inputs.environment }} -t "-no-color -auto-approve -var=""app_name=${{ github.event.repository.name }}"""

  deploy-to-vercel:
    name: Deploy ${{ inputs.git_tag }} to ${{ inputs.environment }}
    needs: [ apply-env-vars ]
    runs-on: ${{ inputs.local_runner }}

    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.git_tag }}
          fetch-depth: 0

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node_version }}

      - name: Setup .npmrc for pulling & publishing to Nexus
        run: |
          if [ "${{ inputs.package_manager }}" == "berry" ]; then
            npm install -g yarn
            yarn config set npmAlwaysAuth true
            yarn config set npmAuthIdent ${{ secrets.nexus_npm_login }}
            yarn config set npmRegistryServer https://${{ inputs.nexus_host_domain }}/repository/npm-public

            yarn config set 'npmRegistries["//${{ inputs.nexus_host_domain }}/repository/npm-local/"].npmAuthIdent' ${{ secrets.nexus_npm_login }}
            yarn config set 'npmRegistries["//${{ inputs.nexus_host_domain }}/repository/npm-local/"].npmAlwaysAuth' true
          elif [ "${{ inputs.package_manager }}" == "yarn" ]; then
            FULL_REPO_AUTH="_auth=${{ secrets.nexus_npm_login }}"
            echo -e "\n" \
                "registry=https://${{ inputs.nexus_host_domain }}/repository/npm-public\n" \
                "$FULL_REPO_AUTH\n" \
                "//${{ inputs.nexus_host_domain }}/repository/npm-local:_auth=${{ secrets.nexus_npm_login }}\n" \
                "email=${{ secrets.nexus_username }}\n" \
                "always-auth=true\n" \ >> .npmrc
          elif [ "${{ inputs.package_manager }}" == "npm" ]; then
              FULL_REPO_AUTH="//${{ inputs.nexus_host_domain }}/repository/:_auth=${{ secrets.nexus_npm_login }}"
              echo -e "\n" \
                "registry=https://${{ inputs.nexus_host_domain }}/repository/npm-public\n" \
                "$FULL_REPO_AUTH\n" \
                "//${{ inputs.nexus_host_domain }}/repository/npm-local:_auth=${{ secrets.nexus_npm_login }}\n" \
                "email=${{ secrets.nexus_username }}\n" \
                "always-auth=true\n" \ >> .npmrc
          fi

      - name: Vercel Build
        env:
          NODE_OPTIONS: --max-old-space-size=${{ inputs.max_old_space_size }}
        run: |
          export VERCEL_PROJECT_ID=${{ secrets.vercel_project_id }}
          export VERCEL_ORG_ID=${{ secrets.vercel_org_id }}
          npx vercel@${{ inputs.vercel_cli_version }} pull --yes --environment=production --token ${{ secrets.vercel_token }} --scope litteraeducation
          npx vercel@${{ inputs.vercel_cli_version }} build --prod --yes --scope litteraeducation --token ${{ secrets.vercel_token }}

      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.vercel_token }}
          github-token: ${{ secrets.github_actions_token }}
          vercel-args: '--prod --prebuilt'
          scope: 'litteraeducation'
          vercel-org-id: ${{ secrets.vercel_org_id }}
          vercel-project-id: ${{ secrets.vercel_project_id }}
          working-directory: ./
          vercel-version: ${{ inputs.vercel_cli_version }}